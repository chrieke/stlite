{"version":3,"sources":["../../../streamlit/frontend/src/components/elements/VegaLiteChart/styled-components.ts","../../../streamlit/frontend/src/components/elements/VegaLiteChart/VegaLiteChart.tsx"],"names":["StyledVegaLiteChartContainer","theme","zIndex","zIndices","popupMenu","summary","height","menuButton","MagicFields","DEFAULT_DATA_NAME","SUPPORTED_INDEX_TYPES","Set","VegaLiteChart","vegaView","vegaFinalizer","defaultDataName","element","state","error","undefined","finalizeView","generateSpec","props","el","spec","JSON","parse","get","useContainerWidth","config","configWithThemeDefaults","width","padding","bottom","datasets","Error","this","createView","ensureError","setState","prevProps","prevElement","prevTheme","prevSpec","logMessage","prevData","data","updateData","prevDataSets","getDataSets","dataSets","Object","entries","name","dataset","datasetName","prevDataset","keys","hasOwnProperty","resize","runAsync","tableGetRowsAndCols","prevNumRows","prevNumCols","numRows","numCols","df0","df1","c","r","tableGet","dataIsAnAppendOfPrev","insert","getDataArray","cs","vega","remove","change","_runtime","embed","vgSpec","view","finalize","getDataArrays","datasetNames","length","dataObj","getInlineData","data-testid","ref","PureComponent","dataProto","datasetArrays","isEmpty","forEach","x","i","startIndex","dataArr","rows","cols","indexType","hasSupportedIndex","has","rowIndex","row","indexGet","colIndex","push","colors","fontSizes","genericFonts","themeFonts","labelFont","bodyFont","titleFont","labelFontSize","twoSmPx","titleFontSize","themeDefaults","background","bgColor","axis","labelColor","bodyText","titleColor","gridColor","fadedText10","legend","title","color","subtitleColor","header","continuousHeight","continuousWidth","merge","withTheme","withFullScreenWrapper"],"mappings":"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","file":"static/js/34.4268250c.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledVegaLiteChartContainer = styled.div(({ theme }) => ({\n  // These styles come from VegaLite Library\n  \"&.vega-embed\": {\n    \".vega-actions\": {\n      zIndex: theme.zIndices.popupMenu,\n    },\n    summary: {\n      // Fix weird floating button height issue in Vega Lite.\n      height: \"auto\",\n      // Fix floating button appearing above pop-ups.\n      zIndex: theme.zIndices.menuButton,\n    },\n  },\n}))\n","/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent } from \"react\"\nimport { withTheme } from \"@emotion/react\"\nimport { logMessage } from \"src/lib/log\"\nimport { Map as ImmutableMap } from \"immutable\"\nimport merge from \"lodash/merge\"\nimport withFullScreenWrapper from \"src/hocs/withFullScreenWrapper\"\nimport {\n  tableGetRowsAndCols,\n  indexGet,\n  tableGet,\n} from \"src/lib/dataFrameProto\"\nimport { ensureError } from \"src/lib/ErrorHandling\"\nimport { Theme } from \"src/theme\"\nimport embed from \"vega-embed\"\nimport * as vega from \"vega\"\nimport { StyledVegaLiteChartContainer } from \"./styled-components\"\n\nconst MagicFields = {\n  DATAFRAME_INDEX: \"(index)\",\n}\n\nconst DEFAULT_DATA_NAME = \"source\"\n\n/**\n * Horizontal space needed for the embed actions button.\n */\nconst EMBED_PADDING = 38\n\n/**\n * Fix bug where Vega Lite was vertically-cropping the x-axis in some cases.\n * For example, in e2e/scripts/add_rows.py\n */\nconst BOTTOM_PADDING = 20\n\n/** Types of dataframe-indices that are supported as x axes. */\nconst SUPPORTED_INDEX_TYPES = new Set([\n  \"datetimeIndex\",\n  \"float_64Index\",\n  \"int_64Index\",\n  \"rangeIndex\",\n  \"timedeltaIndex\",\n  \"uint_64Index\",\n])\n\ninterface Props {\n  width: number\n  element: ImmutableMap<string, any>\n  theme: Theme\n}\n\nexport interface PropsWithHeight extends Props {\n  height: number | undefined\n}\n\ninterface State {\n  error?: Error\n}\n\nexport class VegaLiteChart extends PureComponent<PropsWithHeight, State> {\n  /**\n   * The Vega view object\n   */\n  private vegaView?: vega.View\n\n  /**\n   * Finalizer for the embedded vega object. Must be called to dispose\n   * of the vegaView when it's no longer used.\n   */\n  private vegaFinalizer?: () => void\n\n  /**\n   * The default data name to add to.\n   */\n  private defaultDataName = DEFAULT_DATA_NAME\n\n  /**\n   * The html element we attach the Vega view to.\n   */\n  private element: HTMLDivElement | null = null\n\n  readonly state = {\n    error: undefined,\n  }\n\n  public async componentDidMount(): Promise<void> {\n    try {\n      await this.createView()\n    } catch (e) {\n      const error = ensureError(e)\n      this.setState({ error })\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.finalizeView()\n  }\n\n  /**\n   * Finalize the view so it can be garbage collected. This should be done\n   * when a new view is created, and when the component unmounts.\n   */\n  private finalizeView = (): any => {\n    if (this.vegaFinalizer) {\n      this.vegaFinalizer()\n    }\n    this.vegaFinalizer = undefined\n    this.vegaView = undefined\n  }\n\n  public async componentDidUpdate(prevProps: PropsWithHeight): Promise<void> {\n    const { element: prevElement, theme: prevTheme } = prevProps\n    const { element, theme } = this.props\n\n    const prevSpec = prevElement.get(\"spec\")\n    const spec = element.get(\"spec\")\n\n    if (\n      !this.vegaView ||\n      prevSpec !== spec ||\n      prevTheme !== theme ||\n      prevProps.width !== this.props.width ||\n      prevProps.height !== this.props.height\n    ) {\n      logMessage(\"Vega spec changed.\")\n      try {\n        await this.createView()\n      } catch (e) {\n        const error = ensureError(e)\n\n        this.setState({ error })\n      }\n      return\n    }\n\n    const prevData = prevElement.get(\"data\")\n    const data = element.get(\"data\")\n\n    if (prevData || data) {\n      this.updateData(this.defaultDataName, prevData, data)\n    }\n\n    const prevDataSets = getDataSets(prevElement) || {}\n    const dataSets = getDataSets(element) || {}\n\n    for (const [name, dataset] of Object.entries(dataSets)) {\n      const datasetName = name || this.defaultDataName\n      const prevDataset = prevDataSets[datasetName]\n      this.updateData(datasetName, prevDataset, dataset)\n    }\n\n    // Remove all datasets that are in the previous but not the current datasets.\n    for (const name of Object.keys(prevDataSets)) {\n      if (!dataSets.hasOwnProperty(name) && name !== this.defaultDataName) {\n        this.updateData(name, null, null)\n      }\n    }\n\n    this.vegaView.resize().runAsync()\n  }\n\n  public generateSpec = (): any => {\n    const { element: el, theme } = this.props\n    const spec = JSON.parse(el.get(\"spec\"))\n    const useContainerWidth = JSON.parse(el.get(\"useContainerWidth\"))\n\n    spec.config = configWithThemeDefaults(spec.config, theme)\n\n    if (this.props.height) {\n      // fullscreen\n      spec.width = this.props.width - EMBED_PADDING\n      spec.height = this.props.height\n    } else if (useContainerWidth) {\n      spec.width = this.props.width - EMBED_PADDING\n    }\n\n    if (!spec.padding) {\n      spec.padding = {}\n    }\n\n    if (spec.padding.bottom == null) {\n      spec.padding.bottom = BOTTOM_PADDING\n    }\n\n    if (spec.datasets) {\n      throw new Error(\"Datasets should not be passed as part of the spec\")\n    }\n\n    return spec\n  }\n\n  /**\n   * Update the dataset in the Vega view. This method tried to minimize changes\n   * by automatically creating and applying diffs.\n   *\n   * @param name The name of the dataset.\n   * @param prevData The dataset before the update.\n   * @param data The dataset at the current state.\n   */\n  private updateData(\n    name: string,\n    prevData: ImmutableMap<string, any> | null,\n    data: ImmutableMap<string, any> | null\n  ): void {\n    if (!this.vegaView) {\n      throw new Error(\"Chart has not been drawn yet\")\n    }\n\n    if (!data || !data.get(\"data\")) {\n      const view = this.vegaView as any\n      // eslint-disable-next-line no-underscore-dangle\n      const viewHasDataWithName = view._runtime.data.hasOwnProperty(name)\n      if (viewHasDataWithName) {\n        this.vegaView.remove(name, vega.truthy)\n      }\n      return\n    }\n\n    if (!prevData || !prevData.get(\"data\")) {\n      this.vegaView.insert(name, getDataArray(data))\n      return\n    }\n\n    const [prevNumRows, prevNumCols] = tableGetRowsAndCols(\n      prevData.get(\"data\")\n    )\n    const [numRows, numCols] = tableGetRowsAndCols(data.get(\"data\"))\n\n    // Check if dataframes have same \"shape\" but the new one has more rows.\n    if (\n      dataIsAnAppendOfPrev(\n        prevData,\n        prevNumRows,\n        prevNumCols,\n        data,\n        numRows,\n        numCols\n      )\n    ) {\n      if (prevNumRows < numRows) {\n        this.vegaView.insert(name, getDataArray(data, prevNumRows))\n      }\n    } else {\n      // Clean the dataset and insert from scratch.\n      const cs = vega\n        .changeset()\n        .remove(vega.truthy)\n        .insert(getDataArray(data))\n      this.vegaView.change(name, cs)\n      logMessage(\n        `Had to clear the ${name} dataset before inserting data through Vega view.`\n      )\n    }\n  }\n\n  /**\n   * Create a new Vega view and add the data.\n   */\n  private async createView(): Promise<void> {\n    logMessage(\"Creating a new Vega view.\")\n\n    if (!this.element) {\n      throw Error(\"Element missing.\")\n    }\n\n    // Finalize the previous view so it can be garbage collected.\n    this.finalizeView()\n\n    const el = this.props.element\n    const spec = this.generateSpec()\n    const { vgSpec, view, finalize } = await embed(this.element, spec)\n\n    this.vegaView = view\n    this.vegaFinalizer = finalize\n\n    const datasets = getDataArrays(el)\n\n    // Heuristic to determine the default dataset name.\n    const datasetNames = datasets ? Object.keys(datasets) : []\n    if (datasetNames.length === 1) {\n      const [datasetName] = datasetNames\n      this.defaultDataName = datasetName\n    } else if (datasetNames.length === 0 && vgSpec.data) {\n      this.defaultDataName = DEFAULT_DATA_NAME\n    }\n\n    const dataObj = getInlineData(el)\n    if (dataObj) {\n      view.insert(this.defaultDataName, dataObj)\n    }\n    if (datasets) {\n      for (const [name, data] of Object.entries(datasets)) {\n        view.insert(name, data)\n      }\n    }\n\n    await view.runAsync()\n\n    // Fix bug where the \"...\" menu button overlaps with charts where width is\n    // set to -1 on first load.\n    this.vegaView.resize().runAsync()\n  }\n\n  public render(): JSX.Element {\n    if (this.state.error) {\n      // eslint-disable-next-line @typescript-eslint/no-throw-literal\n      throw this.state.error\n    }\n\n    return (\n      // Create the container Vega draws inside.\n      <StyledVegaLiteChartContainer\n        data-testid=\"stVegaLiteChart\"\n        ref={c => {\n          this.element = c\n        }}\n      />\n    )\n  }\n}\n\nfunction getInlineData(\n  el: ImmutableMap<string, any>\n): { [field: string]: any }[] | null {\n  const dataProto = el.get(\"data\")\n\n  if (!dataProto) {\n    return null\n  }\n\n  return getDataArray(dataProto)\n}\n\nfunction getDataArrays(\n  el: ImmutableMap<string, any>\n): { [dataset: string]: any[] } | null {\n  const datasets = getDataSets(el)\n\n  if (datasets == null) {\n    return null\n  }\n\n  const datasetArrays: { [dataset: string]: any[] } = {}\n\n  for (const [name, dataset] of Object.entries(datasets)) {\n    datasetArrays[name] = getDataArray(dataset)\n  }\n\n  return datasetArrays\n}\n\nfunction getDataSets(\n  el: ImmutableMap<string, any>\n): { [dataset: string]: ImmutableMap<string, any> } | null {\n  if (!el.get(\"datasets\") || el.get(\"datasets\").isEmpty()) {\n    return null\n  }\n\n  const datasets: { [dataset: string]: any } = {}\n\n  el.get(\"datasets\").forEach((x: any, i: number) => {\n    if (!x) {\n      return\n    }\n    const name = x.get(\"hasName\") ? x.get(\"name\") : null\n    datasets[name] = x.get(\"data\")\n  })\n\n  return datasets\n}\n\nfunction getDataArray(\n  dataProto: ImmutableMap<string, any>,\n  startIndex = 0\n): { [field: string]: any }[] {\n  if (!dataProto.get(\"data\")) {\n    return []\n  }\n  if (!dataProto.get(\"index\")) {\n    return []\n  }\n  if (!dataProto.get(\"columns\")) {\n    return []\n  }\n\n  const dataArr = []\n  const [rows, cols] = tableGetRowsAndCols(dataProto.get(\"data\"))\n\n  const indexType = dataProto.get(\"index\").get(\"type\")\n  const hasSupportedIndex = SUPPORTED_INDEX_TYPES.has(indexType)\n\n  for (let rowIndex = startIndex; rowIndex < rows; rowIndex++) {\n    const row: { [field: string]: any } = {}\n\n    if (hasSupportedIndex) {\n      row[MagicFields.DATAFRAME_INDEX] = indexGet(\n        dataProto.get(\"index\"),\n        0,\n        rowIndex\n      )\n    }\n\n    for (let colIndex = 0; colIndex < cols; colIndex++) {\n      row[indexGet(dataProto.get(\"columns\"), 0, colIndex)] = tableGet(\n        dataProto.get(\"data\"),\n        colIndex,\n        rowIndex\n      )\n    }\n\n    dataArr.push(row)\n  }\n\n  return dataArr\n}\n\n/**\n * Checks if data looks like it's just prevData plus some appended rows.\n */\nexport function dataIsAnAppendOfPrev(\n  prevData: ImmutableMap<string, number>,\n  prevNumRows: number,\n  prevNumCols: number,\n  data: ImmutableMap<string, number>,\n  numRows: number,\n  numCols: number\n): boolean {\n  // Check whether dataframes have the same shape.\n\n  // not an append\n  if (prevNumCols !== numCols) {\n    return false\n  }\n\n  // Data can be updated, but still have the same number of rows.\n  // We consider the case an append only when the number of rows has increased\n  if (prevNumRows >= numRows) {\n    return false\n  }\n\n  // if no previous data, render from scratch\n  if (prevNumRows === 0) {\n    return false\n  }\n\n  const df0 = prevData.get(\"data\")\n  const df1 = data.get(\"data\")\n  const c = numCols - 1\n  const r = prevNumRows - 1\n\n  // Check if the new dataframe looks like it's a superset of the old one.\n  // (this is a very light check, and not guaranteed to be right!)\n  if (\n    tableGet(df0, c, 0) !== tableGet(df1, c, 0) ||\n    tableGet(df0, c, r) !== tableGet(df1, c, r)\n  ) {\n    return false\n  }\n\n  return true\n}\n\nfunction configWithThemeDefaults(config: any, theme: Theme): any {\n  const { colors, fontSizes, genericFonts } = theme\n  const themeFonts = {\n    labelFont: genericFonts.bodyFont,\n    titleFont: genericFonts.bodyFont,\n    labelFontSize: fontSizes.twoSmPx,\n    titleFontSize: fontSizes.twoSmPx,\n  }\n  const themeDefaults = {\n    background: colors.bgColor,\n    axis: {\n      labelColor: colors.bodyText,\n      titleColor: colors.bodyText,\n      gridColor: colors.fadedText10,\n      ...themeFonts,\n    },\n    legend: {\n      labelColor: colors.bodyText,\n      titleColor: colors.bodyText,\n      ...themeFonts,\n    },\n    title: {\n      color: colors.bodyText,\n      subtitleColor: colors.bodyText,\n      ...themeFonts,\n    },\n    header: {\n      labelColor: colors.bodyText,\n    },\n    view: {\n      continuousHeight: 300,\n      continuousWidth: 400,\n    },\n  }\n\n  if (!config) {\n    return themeDefaults\n  }\n\n  // Fill in theme defaults where the user didn't specify config options.\n  return merge({}, themeDefaults, config || {})\n}\n\nexport default withTheme(withFullScreenWrapper(VegaLiteChart))\n"],"sourceRoot":""}