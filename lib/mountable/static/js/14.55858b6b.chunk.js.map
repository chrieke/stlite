{"version":3,"sources":["../../../streamlit/frontend/src/hocs/withMapboxToken/MapboxToken.ts","../../../streamlit/frontend/src/hocs/withMapboxToken/MapboxTokenError.tsx","../../../streamlit/frontend/src/hocs/withMapboxToken/withMapboxToken.tsx","../../../streamlit/frontend/src/components/elements/DeckGlJsonChart/styled-components.ts","../../../streamlit/frontend/src/components/elements/DeckGlJsonChart/DeckGlJsonChart.tsx"],"names":["MapboxTokenNotProvidedError","Error","MapboxTokenFetchingError","MapboxToken","SessionInfo","current","commandLine","userMapboxToken","token","toLowerCase","this","fetchToken","url","tokenName","axios","get","response","data","error","ensureError","message","isRunningLocal","hostname","window","location","MapboxTokenError","width","deltaType","ErrorElement","name","href","withMapboxToken","WrappedComponent","WithMapboxToken","props","initMapboxToken","a","mapboxToken","setState","isFetching","mapboxTokenError","state","undefined","Alert","body","kind","Kind","INFO","PureComponent","displayName","hoistNonReactStatics","StyledDeckGlChart","height","marginTop","theme","spacing","sm","position","StyledNavigationControlContainer","right","top","md","zIndex","configuration","classes","layers","aggregationLayers","geoLayers","meshLayers","registerLoaders","CSVLoader","GLTFLoader","jsonConverter","JSONConverter","DeckGlJsonChart","viewState","bearing","pitch","zoom","initialized","initialViewState","componentDidMount","createTooltip","info","element","object","tooltip","JSON","parse","html","interpolate","text","matchedVariables","match","forEach","variable","substring","length","hasOwnProperty","replace","onViewStateChange","deck","getDeckObject","className","getTooltip","ContextProvider","MapContext","Provider","controller","mapStyle","mapboxApiAccessToken","showCompass","isEqual","diff","Object","keys","reduce","key","json","notNullOrUndefined","mapTheme","getLuminance","colors","bgColor","useContainerWidth","views","convert","withTheme","withFullScreenWrapper"],"mappings":"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","file":"static/js/14.55858b6b.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport axios from \"axios\"\nimport { ensureError } from \"src/lib/ErrorHandling\"\nimport { SessionInfo } from \"src/lib/SessionInfo\"\n\nexport class MapboxTokenNotProvidedError extends Error {}\nexport class MapboxTokenFetchingError extends Error {}\n\n/**\n * A remote file that stores user-visible tokens.\n */\nexport const TOKENS_URL = \"https://data.streamlit.io/tokens.json\"\n\nexport class MapboxToken {\n  static token?: string\n\n  static commandLine?: string\n\n  private static isRunningLocal = (): boolean => {\n    const { hostname } = window.location\n\n    return hostname === \"localhost\" || hostname === \"127.0.0.1\"\n  }\n\n  /**\n   * Expose a singleton MapboxToken:\n   * - If the user specified a token in their streamlit config, return it.\n   * - Else, fetch the remote \"tokens.json\" and return the \"mapbox\" entry.\n   *\n   * (The returned value is cached in memory, so the remote resource will\n   * only be fetched once per session.)\n   */\n  public static async get(): Promise<string> {\n    const { commandLine, userMapboxToken } = SessionInfo.current\n\n    if (\n      !MapboxToken.token ||\n      MapboxToken.commandLine !== commandLine.toLowerCase()\n    ) {\n      if (userMapboxToken !== \"\") {\n        MapboxToken.token = userMapboxToken\n      } else {\n        // TODO: Replace this with the block below after October 1st 2020.\n        MapboxToken.token = await this.fetchToken(TOKENS_URL, \"mapbox\")\n        // if (this.isRunningLocal() && SessionInfo.isHello) {\n        //   MapboxToken.token = await this.fetchToken(TOKENS_URL, \"mapbox-localhost\")\n        // } else {\n        //   throw new MapboxTokenNotProvidedError(\"No Mapbox token provided\")\n        // }\n      }\n\n      MapboxToken.commandLine = commandLine.toLowerCase()\n    }\n\n    return MapboxToken.token\n  }\n\n  private static async fetchToken(\n    url: string,\n    tokenName: string\n  ): Promise<string> {\n    try {\n      const response = await axios.get(url)\n      const { [tokenName]: token } = response.data\n\n      if (token == null || token === \"\") {\n        throw new Error(`Missing token \"${tokenName}\"`)\n      }\n\n      return token\n    } catch (e) {\n      const error = ensureError(e)\n      throw new MapboxTokenFetchingError(`${error.message} (${url})`)\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport ErrorElement from \"src/components/shared/ErrorElement\"\nimport {\n  MapboxTokenFetchingError,\n  MapboxTokenNotProvidedError,\n} from \"src/hocs/withMapboxToken/MapboxToken\"\n\ninterface Props {\n  error: Error | MapboxTokenFetchingError | MapboxTokenNotProvidedError\n  deltaType: string\n  width: number\n}\n\nconst MapboxTokenError = ({\n  error,\n  width,\n  deltaType,\n}: Props): ReactElement => {\n  if (error instanceof MapboxTokenNotProvidedError) {\n    return (\n      <ErrorElement\n        width={width}\n        name=\"No Mapbox token provided\"\n        message={\n          <>\n            <p>\n              To use <code>st.{deltaType}</code> or <code>st.map</code> you\n              need to set up a Mapbox access token.\n            </p>\n\n            <p>\n              To get a token, create an account at{\" \"}\n              <a href=\"https://mapbox.com\">https://mapbox.com</a>. It's free\n              for moderate usage levels!\n            </p>\n\n            <p>\n              Once you have a token, just set it using the Streamlit config\n              option <code>mapbox.token</code> and don't forget to restart your\n              Streamlit server at this point if it's still running, then reload\n              this tab.\n            </p>\n\n            <p>\n              See{\" \"}\n              <a href=\"https://docs.streamlit.io/library/advanced-features/configuration#view-all-configuration-options\">\n                our documentation\n              </a>{\" \"}\n              for more info on how to set config options.\n            </p>\n          </>\n        }\n      />\n    )\n  }\n\n  if (error instanceof MapboxTokenFetchingError) {\n    return (\n      <ErrorElement\n        width={width}\n        name=\"Error fetching Streamlit Mapbox token\"\n        message={\n          <>\n            <p>This app requires an internet connection.</p>\n            <p>Please check your connection and try again.</p>\n            <p>\n              If you think this is a bug, please file bug report{\" \"}\n              <a href=\"https://github.com/streamlit/streamlit/issues/new/choose\">\n                here\n              </a>\n              .\n            </p>\n          </>\n        }\n      />\n    )\n  }\n\n  return (\n    <ErrorElement\n      width={width}\n      name=\"Error fetching Streamlit Mapbox token\"\n      message={error.message}\n    />\n  )\n}\n\nexport default MapboxTokenError\n","/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Alert from \"src/components/elements/Alert\"\nimport { Kind } from \"src/components/shared/AlertContainer\"\nimport { MapboxToken } from \"src/hocs/withMapboxToken/MapboxToken\"\nimport { ensureError } from \"src/lib/ErrorHandling\"\nimport hoistNonReactStatics from \"hoist-non-react-statics\"\nimport React, { ComponentType, PureComponent, ReactNode } from \"react\"\nimport MapboxTokenError from \"./MapboxTokenError\"\n\ninterface Props {\n  width: number\n}\n\ninterface State {\n  mapboxToken?: string\n  mapboxTokenError?: Error\n  isFetching: boolean\n}\n\n/**\n * A higher-order component that fetches our mapbox token and passes\n * it through to the wrapped component. If the token fetch fails, an error\n * will be rendered in place of the wrapped component.\n *\n * @param {string} deltaType In case of an exception we show an error with this\n */\n\nconst withMapboxToken = (deltaType: string) => (\n  WrappedComponent: ComponentType<any>\n): ComponentType<any> => {\n  class WithMapboxToken extends PureComponent<Props, State> {\n    public static readonly displayName = `withMapboxToken(${WrappedComponent.displayName ||\n      WrappedComponent.name})`\n\n    public constructor(props: Props) {\n      super(props)\n\n      this.state = {\n        isFetching: true,\n        mapboxToken: undefined,\n        mapboxTokenError: undefined,\n      }\n\n      this.initMapboxToken()\n    }\n\n    /**\n     * Fetch our MapboxToken.\n     */\n    private initMapboxToken = async (): Promise<void> => {\n      try {\n        const mapboxToken = await MapboxToken.get()\n\n        this.setState({\n          mapboxToken,\n          isFetching: false,\n        })\n      } catch (e) {\n        const error = ensureError(e)\n\n        this.setState({\n          mapboxTokenError: error,\n          isFetching: false,\n        })\n      }\n    }\n\n    public render(): ReactNode {\n      const { mapboxToken, mapboxTokenError, isFetching } = this.state\n      const { width } = this.props\n\n      // We got an error when fetching our mapbox token: show the error.\n      if (mapboxTokenError) {\n        return (\n          <MapboxTokenError\n            width={width}\n            error={mapboxTokenError}\n            deltaType={deltaType}\n          />\n        )\n      }\n\n      // If our mapboxToken hasn't been retrieved yet, show a loading alert.\n      if (isFetching) {\n        return <Alert body={\"Loading...\"} kind={Kind.INFO} width={width} />\n      }\n\n      // We have the mapbox token. Pass it through to our component.\n      return <WrappedComponent mapboxToken={mapboxToken} {...this.props} />\n    }\n  }\n\n  return hoistNonReactStatics(WithMapboxToken, WrappedComponent)\n}\n\nexport default withMapboxToken\n","/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport interface StyledDeckGlChartProps {\n  width: number\n  height: number\n}\n\nexport const StyledDeckGlChart = styled.div<StyledDeckGlChartProps>(\n  ({ width, height, theme }) => ({\n    marginTop: theme.spacing.sm,\n    position: \"relative\",\n    height,\n    width,\n  })\n)\n\nexport const StyledNavigationControlContainer = styled.div(({ theme }) => ({\n  position: \"absolute\",\n  right: \"2.625rem\",\n  top: theme.spacing.md,\n  zIndex: 1,\n}))\n","/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent, ReactNode } from \"react\"\nimport DeckGL from \"deck.gl\"\nimport isEqual from \"lodash/isEqual\"\nimport { MapContext, StaticMap, NavigationControl } from \"react-map-gl\"\nimport { withTheme } from \"@emotion/react\"\nimport { Theme } from \"src/theme\"\nimport { getLuminance } from \"color2k\"\n// We don't have Typescript defs for these imports, which makes ESLint unhappy\n/* eslint-disable import/no-extraneous-dependencies */\nimport * as layers from \"@deck.gl/layers\"\nimport { JSONConverter } from \"@deck.gl/json\"\nimport * as geoLayers from \"@deck.gl/geo-layers\"\nimport * as aggregationLayers from \"@deck.gl/aggregation-layers\"\nimport * as meshLayers from \"@deck.gl/mesh-layers\"\n/* eslint-enable */\n\nimport { CSVLoader } from \"@loaders.gl/csv\"\nimport { GLTFLoader } from \"@loaders.gl/gltf\"\nimport { registerLoaders } from \"@loaders.gl/core\"\n\nimport withFullScreenWrapper from \"src/hocs/withFullScreenWrapper\"\nimport withMapboxToken from \"src/hocs/withMapboxToken\"\n\nimport { notNullOrUndefined } from \"src/lib/utils\"\n\nimport { DeckGlJsonChart as DeckGlJsonChartProto } from \"src/autogen/proto\"\nimport {\n  StyledDeckGlChart,\n  StyledNavigationControlContainer,\n} from \"./styled-components\"\n\nimport \"mapbox-gl/dist/mapbox-gl.css\"\n\ninterface PickingInfo {\n  object: {\n    [key: string]: string\n  }\n}\n\ninterface DeckObject {\n  initialViewState: {\n    height: number\n    width: number\n  }\n  layers: Record<string, unknown>[]\n  mapStyle?: string | Array<string>\n}\n\nconst configuration = {\n  classes: { ...layers, ...aggregationLayers, ...geoLayers, ...meshLayers },\n}\n\nregisterLoaders([CSVLoader, GLTFLoader])\n\nconst jsonConverter = new JSONConverter({ configuration })\n\ninterface Props {\n  width: number\n  theme: Theme\n  mapboxToken: string\n  element: DeckGlJsonChartProto\n}\n\nexport interface PropsWithHeight extends Props {\n  height: number | undefined\n}\n\ninterface State {\n  viewState: Record<string, unknown>\n  initialized: boolean\n  initialViewState: Record<string, unknown>\n}\n\nexport const DEFAULT_DECK_GL_HEIGHT = 500\n\nexport class DeckGlJsonChart extends PureComponent<PropsWithHeight, State> {\n  readonly state = {\n    viewState: {\n      bearing: 0,\n      pitch: 0,\n      zoom: 11,\n    },\n    initialized: false,\n    initialViewState: {},\n  }\n\n  componentDidMount = (): void => {\n    // HACK: Load layers a little after loading the map, to hack around a bug\n    // where HexagonLayers were not drawing on first load but did load when the\n    // script got re-executed.\n    this.setState({\n      initialized: true,\n    })\n  }\n\n  static getDerivedStateFromProps(\n    props: Readonly<PropsWithHeight>,\n    state: Partial<State>\n  ): Partial<State> | null {\n    const deck = DeckGlJsonChart.getDeckObject(props)\n\n    // If the ViewState on the server has changed, apply the diff to the current state\n    if (!isEqual(deck.initialViewState, state.initialViewState)) {\n      const diff = Object.keys(deck.initialViewState).reduce(\n        (diff, key): any => {\n          // @ts-ignore\n          if (deck.initialViewState[key] === state.initialViewState[key]) {\n            return diff\n          }\n\n          return {\n            ...diff,\n            // @ts-ignore\n            [key]: deck.initialViewState[key],\n          }\n        },\n        {}\n      )\n\n      return {\n        viewState: { ...state.viewState, ...diff },\n        initialViewState: deck.initialViewState,\n      }\n    }\n\n    return null\n  }\n\n  static getDeckObject = (props: PropsWithHeight): DeckObject => {\n    const { element, width, height, theme } = props\n    const json = JSON.parse(element.json)\n\n    // If unset, use either the Mapbox light or dark style based on Streamlit's theme\n    // For Mapbox styles, see https://docs.mapbox.com/api/maps/styles/#mapbox-styles\n    if (!notNullOrUndefined(json.mapStyle)) {\n      const hasLightBg = getLuminance(theme.colors.bgColor) > 0.5\n      const mapTheme = hasLightBg ? \"light\" : \"dark\"\n      json.mapStyle = `mapbox://styles/mapbox/${mapTheme}-v9`\n    }\n\n    // The graph dimensions could be set from props ( like withFullscreen ) or\n    // from the generated element object\n    if (height) {\n      json.initialViewState.height = height\n      json.initialViewState.width = width\n    } else {\n      if (!json.initialViewState.height) {\n        json.initialViewState.height = DEFAULT_DECK_GL_HEIGHT\n      }\n\n      if (element.useContainerWidth) {\n        json.initialViewState.width = width\n      }\n    }\n\n    delete json.views // We are not using views. This avoids a console warning.\n\n    return jsonConverter.convert(json)\n  }\n\n  createTooltip = (info: PickingInfo): Record<string, unknown> | boolean => {\n    const { element } = this.props\n\n    if (!info || !info.object || !element.tooltip) {\n      return false\n    }\n\n    const tooltip = JSON.parse(element.tooltip)\n\n    // NB: https://deckgl.readthedocs.io/en/latest/tooltip.html\n    if (tooltip.html) {\n      tooltip.html = this.interpolate(info, tooltip.html)\n    } else {\n      tooltip.text = this.interpolate(info, tooltip.text)\n    }\n\n    return tooltip\n  }\n\n  interpolate = (info: PickingInfo, body: string): string => {\n    const matchedVariables = body.match(/{(.*?)}/g)\n    if (matchedVariables) {\n      matchedVariables.forEach((match: string) => {\n        const variable = match.substring(1, match.length - 1)\n\n        if (info.object.hasOwnProperty(variable)) {\n          body = body.replace(match, info.object[variable])\n        }\n      })\n    }\n    return body\n  }\n\n  onViewStateChange = ({ viewState }: State): void => {\n    this.setState({ viewState })\n  }\n\n  render(): ReactNode {\n    const deck = DeckGlJsonChart.getDeckObject(this.props)\n    const { viewState } = this.state\n\n    return (\n      <StyledDeckGlChart\n        className=\"stDeckGlJsonChart\"\n        width={deck.initialViewState.width}\n        height={deck.initialViewState.height}\n      >\n        <DeckGL\n          viewState={viewState}\n          onViewStateChange={this.onViewStateChange}\n          height={deck.initialViewState.height}\n          width={deck.initialViewState.width}\n          layers={this.state.initialized ? deck.layers : []}\n          getTooltip={this.createTooltip}\n          ContextProvider={MapContext.Provider}\n          controller\n        >\n          <StaticMap\n            height={deck.initialViewState.height}\n            width={deck.initialViewState.width}\n            mapStyle={\n              deck.mapStyle &&\n              (typeof deck.mapStyle === \"string\"\n                ? deck.mapStyle\n                : deck.mapStyle[0])\n            }\n            mapboxApiAccessToken={this.props.mapboxToken}\n          />\n          <StyledNavigationControlContainer>\n            <NavigationControl className=\"zoomButton\" showCompass={false} />\n          </StyledNavigationControlContainer>\n          )\n        </DeckGL>\n      </StyledDeckGlChart>\n    )\n  }\n}\n\nexport default withTheme(\n  withMapboxToken(\"st.pydeck_chart\")(withFullScreenWrapper(DeckGlJsonChart))\n)\n"],"sourceRoot":""}