{"version":3,"sources":["../../../streamlit/frontend/src/components/elements/GraphVizChart/styled-components.ts","../../../streamlit/frontend/src/components/elements/GraphVizChart/GraphVizChart.tsx"],"names":["StyledGraphVizChart","fontFamily","theme","genericFonts","bodyFont","fontSize","maxWidth","graphviz","withFullScreenWrapper","propWidth","width","element","propHeight","height","chartId","elementId","originalHeight","originalWidth","getChartDimensions","chartWidth","chartHeight","useContainerWidth","updateChart","graph","select","zoom","fit","scale","renderDot","spec","on","node","getBBox","error","logError","useEffect","elementDimensions","className","id","style"],"mappings":";sSAmBaA,EAAsB,yCAAW,kBAAgB,CAC5D,MAAO,CACLC,WAF0C,EAAGC,MAE3BC,aAAaC,SAI/BC,SAAU,SAEZ,QAAS,CACPC,SAAU,WATqB,I,OCmBbC,WAmFPC,mBAhFR,YAI+B,IAH7BC,EAG4B,EAHnCC,MACAC,EAEmC,EAFnCA,QACQC,EAC2B,EADnCC,OAEMC,EAAO,yBAAqBH,EAAQI,WAEtCC,EAAiB,EACjBC,EAAgB,EAMdC,EAAqB,WACzB,IAAIC,EAAaF,EACbG,EAAcJ,EASlB,OAPIJ,GAEFO,EAAaV,EACbW,EAAcR,GACLD,EAAQU,oBACjBF,EAAaV,GAER,CAAEU,aAAYC,gBAGjBE,EAAc,WAClB,IAEE,IAAMC,EAAQC,YAAO,IAAD,OAAKV,IACtBP,WACAkB,MAAK,GACLC,KAAI,GACJC,MAAM,GACNC,UAzBEjB,EAAQkB,MA0BVC,GAAG,OAAO,WACT,IAAMC,EAAOP,YAAO,IAAD,OAAKV,EAAL,WAAsBiB,OACrCA,IACFf,EAAiBe,EAAKC,UAAUnB,OAChCI,EAAgBc,EAAKC,UAAUtB,UAZnC,EAgBkCQ,IAA5BE,EAhBN,EAgBMA,YAAaD,EAhBnB,EAgBmBA,WACjBC,EAAc,GAEhBG,EAAMV,OAAOO,GAEXD,EAAa,GAEfI,EAAMb,MAAMS,GAEd,MAAOc,GACPC,YAASD,KAIbE,qBAAU,WACRb,OAGF,IAAMc,EAAoBlB,IACpBR,EAAgB0B,EAAkBjB,WACpCiB,EAAkBjB,WAClBV,EACEI,EAA6BuB,EAAkBhB,YACjDgB,EAAkBhB,YAClBR,EAEJ,OACE,cAACZ,EAAD,CACEqC,UAAU,2BACVC,GAAIxB,EACJyB,MAAO,CAAE7B,QAAOG","file":"static/js/16.fd522af6.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledGraphVizChart = styled.div(({ theme }) => ({\n  \"& *\": {\n    fontFamily: theme.genericFonts.bodyFont,\n    // Font sizes inside the SVG element are getting huge for some reason.\n    // Hacking together a number by eyeballing it:\n    // 12px in the SVG looks like 1rem outside, so 9.6px ~= 0.8rem.\n    fontSize: \"9.6px\",\n  },\n  \"& svg\": {\n    maxWidth: \"100%\",\n  },\n}))\n","/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, useEffect } from \"react\"\nimport { select } from \"d3\"\nimport { graphviz } from \"d3-graphviz\"\nimport { logError } from \"src/lib/log\"\nimport withFullScreenWrapper from \"src/hocs/withFullScreenWrapper\"\nimport { GraphVizChart as GraphVizChartProto } from \"src/autogen/proto\"\nimport { StyledGraphVizChart } from \"./styled-components\"\n\nexport interface GraphVizChartProps {\n  width: number\n  element: GraphVizChartProto\n  height: number | undefined\n}\n\ninterface Dimensions {\n  chartWidth: number\n  chartHeight: number\n}\n\n// Use d3Graphviz in a dummy expression so the library actually gets loaded.\n// This way it registers itself in d3 as a plugin at this point.\nconst dummyGraphviz = graphviz\ndummyGraphviz // eslint-disable-line @typescript-eslint/no-unused-expressions\n\nexport function GraphVizChart({\n  width: propWidth,\n  element,\n  height: propHeight,\n}: GraphVizChartProps): ReactElement {\n  const chartId = `graphviz-chart-${element.elementId}`\n\n  let originalHeight = 0\n  let originalWidth = 0\n\n  const getChartData = (): string => {\n    return element.spec\n  }\n\n  const getChartDimensions = (): Dimensions => {\n    let chartWidth = originalWidth\n    let chartHeight = originalHeight\n\n    if (propHeight) {\n      // fullscreen\n      chartWidth = propWidth\n      chartHeight = propHeight\n    } else if (element.useContainerWidth) {\n      chartWidth = propWidth\n    }\n    return { chartWidth, chartHeight }\n  }\n\n  const updateChart = (): void => {\n    try {\n      // Layout and render the graph\n      const graph = select(`#${chartId}`)\n        .graphviz()\n        .zoom(false)\n        .fit(true)\n        .scale(1)\n        .renderDot(getChartData())\n        .on(\"end\", () => {\n          const node = select(`#${chartId} > svg`).node() as SVGGraphicsElement\n          if (node) {\n            originalHeight = node.getBBox().height\n            originalWidth = node.getBBox().width\n          }\n        })\n\n      const { chartHeight, chartWidth } = getChartDimensions()\n      if (chartHeight > 0) {\n        // Override or reset the graph height\n        graph.height(chartHeight)\n      }\n      if (chartWidth > 0) {\n        // Override or reset the graph width\n        graph.width(chartWidth)\n      }\n    } catch (error) {\n      logError(error)\n    }\n  }\n\n  useEffect(() => {\n    updateChart()\n  })\n\n  const elementDimensions = getChartDimensions()\n  const width: number = elementDimensions.chartWidth\n    ? elementDimensions.chartWidth\n    : propWidth\n  const height: number | undefined = elementDimensions.chartHeight\n    ? elementDimensions.chartHeight\n    : propHeight\n\n  return (\n    <StyledGraphVizChart\n      className=\"graphviz stGraphVizChart\"\n      id={chartId}\n      style={{ width, height }}\n    />\n  )\n}\n\nexport default withFullScreenWrapper(GraphVizChart)\n"],"sourceRoot":""}