{"version":3,"sources":["../../../streamlit/frontend/src/components/widgets/Button/Button.tsx"],"names":["Button","props","disabled","element","widgetMgr","style","width","className","help","kind","Kind","PRIMARY","size","Size","SMALL","onClick","setTriggerValue","fromUi","label"],"mappings":";uMAqDeA,MApBf,SAAgBC,GAA6B,IACnCC,EAAwCD,EAAxCC,SAAUC,EAA8BF,EAA9BE,QAASC,EAAqBH,EAArBG,UACrBC,EAAQ,CAAEC,MADgCL,EAAVK,OAGtC,OACE,qBAAKC,UAAU,sBAAsBF,MAAOA,EAA5C,SACE,cAACL,EAAA,EAAD,CAAeQ,KAAML,EAAQK,KAA7B,SACE,cAAC,IAAD,CACEC,KAAMC,IAAKC,QACXC,KAAMC,IAAKC,MACXZ,SAAUA,EACVa,QAAS,kBAAMX,EAAUY,gBAAgBb,EAAS,CAAEc,QAAQ,KAJ9D,SAMGd,EAAQe","file":"static/js/36.b77e7284.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { Button as ButtonProto } from \"src/autogen/proto\"\nimport UIButton, {\n  ButtonTooltip,\n  Kind,\n  Size,\n} from \"src/components/shared/Button\"\nimport { WidgetStateManager } from \"src/lib/WidgetStateManager\"\n\nexport interface Props {\n  disabled: boolean\n  element: ButtonProto\n  widgetMgr: WidgetStateManager\n  width: number\n}\n\nfunction Button(props: Props): ReactElement {\n  const { disabled, element, widgetMgr, width } = props\n  const style = { width }\n\n  return (\n    <div className=\"row-widget stButton\" style={style}>\n      <ButtonTooltip help={element.help}>\n        <UIButton\n          kind={Kind.PRIMARY}\n          size={Size.SMALL}\n          disabled={disabled}\n          onClick={() => widgetMgr.setTriggerValue(element, { fromUi: true })}\n        >\n          {element.label}\n        </UIButton>\n      </ButtonTooltip>\n    </div>\n  )\n}\n\nexport default Button\n"],"sourceRoot":""}