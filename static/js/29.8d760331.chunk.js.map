{"version":3,"sources":["../../../streamlit/frontend/src/components/elements/ArrowVegaLiteChart/CustomTheme.tsx","../../../streamlit/frontend/src/components/elements/ArrowVegaLiteChart/styled-components.ts","../../../streamlit/frontend/src/components/elements/ArrowVegaLiteChart/ArrowVegaLiteChart.tsx"],"names":["applyStreamlitTheme","config","theme","hasLightBg","getLuminance","colors","bgColor","streamlitTheme","font","genericFonts","bodyFont","background","fieldTitle","autosize","type","contains","title","align","anchor","color","headingColor","titleFontStyle","fontWeight","fontWeights","bold","fontSize","fontSizes","smPx","orient","offset","axis","labelFontSize","twoSmPx","labelFontWeight","normal","labelColor","fadedText60","labelFontStyle","titleFontWeight","titleFontSize","titleColor","ticks","gridColor","fadedText05","domain","domainWidth","domainColor","labelFlush","labelFlushOffset","labelBound","labelLimit","titlePadding","labelPadding","labelSeparation","labelOverlap","legend","bodyText","columnPadding","rowPadding","padding","range","category","diverging","ramp","heatmap","view","columns","strokeWidth","stroke","continuousHeight","continuousWidth","concat","facet","mark","tooltip","bar","binSpacing","discreteBandSize","band","axisDiscrete","grid","axisXPoint","axisTemporal","axisXBand","mergeWith","_","b","isArray","undefined","applyThemeDefaults","themeFonts","labelFont","titleFont","themeDefaults","fadedText10","subtitleColor","header","merge","StyledVegaLiteChartContainer","paddingRight","zIndex","zIndices","popupMenu","backgroundColor","boxShadow","border","a","fontFamily","md","margin","spacing","twoXS","twoXL","secondaryBg","content","summary","opacity","height","menuButton","borderRadius","radii","transition","darkenedBgMix25","MagicFields","DEFAULT_DATA_NAME","SUPPORTED_INDEX_TYPES","Set","IndexTypeName","DatetimeIndex","Float64Index","Int64Index","RangeIndex","UInt64Index","ArrowVegaLiteChart","vegaView","vegaFinalizer","defaultDataName","element","state","error","finalizeView","generateSpec","props","el","spec","JSON","parse","useContainerWidth","usermeta","embedOptions","width","bottom","datasets","Error","this","createView","ensureError","setState","prevProps","prevElement","prevTheme","prevSpec","logMessage","prevData","data","updateData","prevDataSets","getDataSets","dataSets","Object","entries","name","dataset","datasetName","prevDataset","keys","hasOwnProperty","resize","runAsync","numRows","dimensions","prevNumRows","dataRows","prevNumCols","dataColumns","numCols","c","r","getDataValue","dataIsAnAppendOfPrev","insert","getDataArray","cs","vega","remove","change","_runtime","embed","defaultStyle","vgSpec","finalize","getDataArrays","datasetNames","length","dataObj","getInlineData","data-testid","ref","PureComponent","dataProto","datasetArrays","forEach","x","hasName","startIndex","isEmpty","dataArr","rows","cols","indexType","Quiver","getTypeName","types","index","hasSupportedIndex","has","rowIndex","row","indexValue","getIndexValue","Number","colIndex","dataValue","push","withTheme","withFullScreenWrapper"],"mappings":";uTAsBO,SAASA,EAAoBC,EAAaC,GAC/C,IAAMC,EAAaC,YAAaF,EAAMG,OAAOC,SAAW,GAKlDC,EAAiB,CACrBC,KAAMN,EAAMO,aAAaC,SACzBC,WAAYT,EAAMG,OAAOC,QACzBM,WAAY,SACZC,SAAU,CAAEC,KAAM,MAAOC,SAAU,WACnCC,MAAO,CACLC,MAAO,OACPC,OAAQ,QACRC,MAAOjB,EAAMG,OAAOe,aACpBC,eAAgB,SAChBC,WAAYpB,EAAMqB,YAAYC,KAC9BC,SAAUvB,EAAMwB,UAAUC,KAAO,EACjCC,OAAQ,MACRC,OAAQ,IAEVC,KAAM,CACJC,cAAe7B,EAAMwB,UAAUM,QAC/BC,gBAAiB/B,EAAMqB,YAAYW,OACnCC,WAAYjC,EAAMG,OAAO+B,YACzBC,eAAgB,SAChBC,gBAAiBpC,EAAMqB,YAAYW,OACnCK,cAAerC,EAAMwB,UAAUC,KAC/Ba,WAAYtC,EAAMG,OAAO+B,YACzBf,eAAgB,SAChBoB,OAAO,EACPC,UAAWxC,EAAMG,OAAOsC,YACxBC,QAAQ,EACRC,YAAa,EACbC,YAAa5C,EAAMG,OAAOsC,YAC1BI,YAAY,EACZC,iBAAkB,EAClBC,YAAY,EACZC,WAAY,IACZC,aAAc,GACdC,aAAc,GACdC,gBAAiB,EACjBC,cAAc,GAEhBC,OAAQ,CACNxB,cAAe7B,EAAMwB,UAAUC,KAC/BM,gBAAiB/B,EAAMqB,YAAYW,OACnCC,WAAYjC,EAAMG,OAAOmD,SACzBjB,cAAerC,EAAMwB,UAAUC,KAC/BW,gBAAiBpC,EAAMqB,YAAYW,OACnCb,eAAgB,SAChBmB,WAAYtC,EAAMG,OAAO+B,YACzBe,aAAc,GACdC,aAAc,GACdK,cAAe,EACfC,WAAY,EACZC,SAAU,EACV/B,OAAQ,UAEVgC,MAAM,eAIAzaAIVC,KAAM,CACJC,QAAS,EACTC,YAAa,EACbC,OAAQ,cACRC,iBAAkB,IAClBC,gBAAiB,KAEnBC,OAAQ,CACNL,QAAS,GAEXM,MAAO,CACLN,QAAS,GAEXO,KAAK,aACHC,SAAS,GACLvE,EAAa,CAAEgB,MAAO,WAAc,CAAEA,MAAO,YAEnDwD,IAAK,CACHC,WAAY,EACZC,iBAAkB,CAAEC,KAAM,MAE5BC,aAAc,CACZC,MAAM,GAERC,WAAY,CACVD,MAAM,GAERE,aAAc,CACZF,MAAM,GAERG,UAAW,CACTH,MAAM,IAIV,OAAK/E,EAKEmF,oBAAU,GAAI7E,EAAgBN,GAAQ,SAACoF,EAAGC,GAAJ,OAC3CC,kBAAQD,GAAKA,OAAIE,KALVjF,EASJ,SAASkF,EAAmBxF,EAAaC,GAAoB,IAC1DG,EAAoCH,EAApCG,OAAQqB,EAA4BxB,EAA5BwB,UAAWjB,EAAiBP,EAAjBO,aACrBiF,EAAa,CACjBC,UAAWlF,EAAaC,SACxBkF,UAAWnF,EAAaC,SACxBqB,cAAeL,EAAUM,QACzBO,cAAeb,EAAUM,SAErB6D,EAAgB,CACpBlF,WAAYN,EAAOC,QACnBwB,KAAK,aACHK,WAAY9B,EAAOmD,SACnBhB,WAAYnC,EAAOmD,SACnBd,UAAWrC,EAAOyF,aACfJ,GAELnC,OAAO,aACLpB,WAAY9B,EAAOmD,SACnBhB,WAAYnC,EAAOmD,UAChBkC,GAEL1E,MAAM,aACJG,MAAOd,EAAOmD,SACduC,cAAe1F,EAAOmD,UACnBkC,GAELM,OAAQ,CACN7D,WAAY9B,EAAOmD,UAErBS,KAAM,CACJI,iBAAkB,IAClBC,gBAAiB,MAIrB,OAAKrE,EAKEgG,gBAAM,GAAIJ,EAAe5F,GAAU,IAJjC4F,E,YCzPEK,EAA+B,wCAAW,gBAAGhG,EAAH,EAAGA,MAAH,MAAgB,CAErE,eAAgB,CACd,6CAA8C,CAC5CS,WAAY,eAEd,gBAAiB,CACfwF,aAAc,GAEhB,gBAAiB,CACfC,OAAQlG,EAAMmG,SAASC,UAEvBC,gBAAiBrG,EAAMG,OAAOC,QAC9BkG,UAAW,gCACXC,OAAO,aAAD,OAAevG,EAAMG,OAAOyF,aAClCY,EAAG,CACDC,WAAYzG,EAAMO,aAAaC,SAC/BY,WAAYpB,EAAMqB,YAAYW,OAC9BT,SAAUvB,EAAMwB,UAAUkF,GAC1BC,OAAQ,EACRlD,QAAQ,GAAD,OAAKzD,EAAM4G,QAAQC,MAAnB,YAA4B7G,EAAM4G,QAAQE,OACjD7F,MAAOjB,EAAMG,OAAOmD,UAEtB,UAAW,CACT+C,gBAAiBrG,EAAMG,OAAO4G,YAC9B9F,MAAOjB,EAAMG,OAAOmD,UAEtB,UAAW,CACT0D,QAAS,QAEX,SAAU,CACRA,QAAS,SAGbC,QAAS,CACPC,QAAS,EAETC,OAAQ,OAERjB,OAAQlG,EAAMmG,SAASiB,WACvBb,OAAQ,OACRD,UAAW,OACXe,aAAcrH,EAAMsH,MAAMZ,GAC1BzF,MAAOjB,EAAMG,OAAOyF,YACpBS,gBAAiB,cACjBkB,WAAY,4CACZ,qCAAsC,CACpChB,OAAQ,OACRD,UAAW,OACXrF,MAAOjB,EAAMG,OAAOmD,SACpB4D,QAAS,eACTzG,WAAYT,EAAMG,OAAOqH,sBAnDW,I,OCYtCC,EACa,UAGbC,EAAoB,SASpBC,EAAwB,IAAIC,IAAI,CACpCC,IAAcC,cACdD,IAAcE,aACdF,IAAcG,WACdH,IAAcI,WACdJ,IAAcK,cAsDHC,EAAb,4MAIUC,cAJV,IAUUC,mBAVV,IAeUC,gBAAkBZ,EAf5B,EAoBUa,QAAiC,KApB3C,EAsBWC,MAAQ,CACfC,WAAOnD,GAvBX,EA2CUoD,aAAe,WACjB,EAAKL,eACP,EAAKA,gBAEP,EAAKA,mBAAgB/C,EACrB,EAAK8C,cAAW9C,GAhDpB,EAuGSqD,aAAe,WAAY,IAAD,MACA,EAAKC,MAAnBC,EADc,EACvBN,QAAavI,EADU,EACVA,MACf8I,EAAOC,KAAKC,MAAMH,EAAGC,MACnBG,EAAsBJ,EAAtBI,kBA0BR,GAzB2C,eAAvC,UAAAH,EAAKI,gBAAL,mBAAeC,oBAAf,eAA6BnJ,QAC/B8I,EAAK/I,OAASD,EAAoBgJ,EAAK/I,OAAQC,GAE/C8I,EAAKI,SAASC,aAAanJ,WAAQsF,GAGnCwD,EAAK/I,OAASwF,EAAmBuD,EAAK/I,OAAQC,GAG5C,EAAK4I,MAAMzB,QAEb2B,EAAKM,MAAQ,EAAKR,MAAMQ,MACxBN,EAAK3B,OAAS,EAAKyB,MAAMzB,QAChB8B,IACTH,EAAKM,MAAQ,EAAKR,MAAMQ,OAGrBN,EAAKrF,UACRqF,EAAKrF,QAAU,IAGU,MAAvBqF,EAAKrF,QAAQ4F,SACfP,EAAKrF,QAAQ4F,OA/LI,IAkMfP,EAAKQ,SACP,MAAM,IAAIC,MAAM,qDAGlB,OAAOT,GAxIX,8FA0BE,6GAEUU,KAAKC,aAFf,sDAIUhB,EAAQiB,YAAY,EAAD,IACzBF,KAAKG,SAAS,CAAElB,UALpB,wDA1BF,wFAmCE,WACEe,KAAKd,iBApCT,uEAmDE,WAAgCkB,GAAhC,oHACmBC,EAAkCD,EAA3CrB,QAA6BuB,EAAcF,EAArB5J,MADhC,EAE6BwJ,KAAKZ,MAAxBL,EAFV,EAEUA,QAASvI,EAFnB,EAEmBA,MAEX+J,EAAWF,EAAYf,KACrBA,EAASP,EAATO,KAGLU,KAAKpB,UACN2B,IAAajB,GACbgB,IAAc9J,GACd4J,EAAUR,QAAUI,KAAKZ,MAAMQ,OAC/BQ,EAAUzC,SAAWqC,KAAKZ,MAAMzB,OAZpC,wBAcI6C,YAAW,sBAdf,kBAgBYR,KAAKC,aAhBjB,yDAkBYhB,EAAQiB,YAAY,EAAD,IAEzBF,KAAKG,SAAS,CAAElB,UApBtB,0CAmCE,IAVMwB,EAAWJ,EAAYK,KACrBA,EAAS3B,EAAT2B,MAEJD,GAAYC,IACdV,KAAKW,WAAWX,KAAKlB,gBAAiB2B,EAAUC,GAG5CE,EAAeC,EAAYR,IAAgB,GAC3CS,EAAWD,EAAY9B,IAAY,GAEzC,MAA8BgC,OAAOC,QAAQF,GAA7C,eAAyD,EAAD,oBAA5CG,EAA4C,KAAtCC,EAAsC,KAChDC,EAAcF,GAAQjB,KAAKlB,gBAC3BsC,EAAcR,EAAaO,GAEjCnB,KAAKW,WAAWQ,EAAaC,EAAaF,GAI5C,UAAmBH,OAAOM,KAAKT,GAA/B,eAAWK,EAAmC,KACvCH,EAASQ,eAAeL,IAASA,IAASjB,KAAKlB,iBAClDkB,KAAKW,WAAWM,EAAM,KAAM,MAIhCjB,KAAKpB,SAAS2C,SAASC,WAjDzB,0DAnDF,+EAmJE,SACEP,EACAR,EACAC,GAEA,IAAKV,KAAKpB,SACR,MAAM,IAAImB,MAAM,gCAGlB,GAAKW,GAA8B,IAAtBA,EAAKA,KAAKe,QAUvB,GAAKhB,GAAsC,IAA1BA,EAASC,KAAKe,QAA/B,CAfM,MAuBFhB,EAASiB,WAFDC,EArBN,EAqBJC,SACaC,EAtBT,EAsBJC,YAtBI,EAwB8CpB,EAAKgB,WAAvCD,EAxBZ,EAwBEG,SAGR,GAwLJ,SACEnB,EACAkB,EACAE,EACAnB,EACAe,EACAM,GAKA,GAAIF,IAAgBE,EAClB,OAAO,EAKT,GAAIJ,GAAeF,EACjB,OAAO,EAIT,GAAoB,IAAhBE,EACF,OAAO,EAGT,IAAMK,EAAID,EAAU,EACdE,EAAIN,EAAc,EAIxB,GACElB,EAASyB,aAAa,EAAGF,KAAOtB,EAAKwB,aAAa,EAAGF,IACrDvB,EAASyB,aAAaD,EAAGD,KAAOtB,EAAKwB,aAAaD,EAAGD,GAErD,OAAO,EAGT,OAAO,EA7NHG,CACE1B,EACAkB,EACAE,EACAnB,EACAe,EAjCE,EAwBqBK,aAarBH,EAAcF,GAChBzB,KAAKpB,SAASwD,OAAOnB,EAAMoB,EAAa3B,EAAMiB,QAE3C,CAEL,IAAMW,EAAKC,cAERC,OAAOD,UACPH,OAAOC,EAAa3B,IACvBV,KAAKpB,SAAS6D,OAAOxB,EAAMqB,GAC3B9B,YAAW,oBAAD,OACYS,EADZ,4DA/BVjB,KAAKpB,SAASwD,OAAOnB,EAAMoB,EAAa3B,SAV3BV,KAAKpB,SAEe8D,SAAShC,KAAKY,eAAeL,IAE5DjB,KAAKpB,SAAS4D,OAAOvB,EAAMsB,YAjKnC,+DA+ME,qHACE/B,YAAW,6BAENR,KAAKjB,QAHZ,sBAIUgB,MAAM,oBAJhB,cAQEC,KAAKd,eAECG,EAAKW,KAAKZ,MAAML,QAChBO,EAAOU,KAAKb,eAXpB,SAY2CwD,YAAM3C,KAAKjB,QAASO,EAAM,CACjEsD,cAAc,IAblB,OAkCE,GAlCF,SAYUC,EAZV,EAYUA,OAAQtI,EAZlB,EAYkBA,KAAMuI,EAZxB,EAYwBA,SAItB9C,KAAKpB,SAAWrE,EAChByF,KAAKnB,cAAgBiE,EAEfhD,EAAWiD,EAAc1D,GAIH,KADtB2D,EAAelD,EAAWiB,OAAOM,KAAKvB,GAAY,IACvCmD,QAAe,EAAD,YACPD,EADO,GACtB7B,EADsB,KAE7BnB,KAAKlB,gBAAkBqC,GACU,IAAxB6B,EAAaC,QAAgBJ,EAAOnC,OAC7CV,KAAKlB,gBAAkBZ,IAGnBgF,EAAUC,EAAc9D,KAE5B9E,EAAK6H,OAAOpC,KAAKlB,gBAAiBoE,GAEhCpD,EACF,UAA2BiB,OAAOC,QAAQlB,GAA1C,eAAsD,EAAD,oBAAzCmB,EAAyC,KAAnCP,EAAmC,KACnDnG,EAAK6H,OAAOnB,EAAMP,GApCxB,iBAwCQnG,EAAKiH,WAxCb,QA4CExB,KAAKpB,SAAS2C,SAASC,WA5CzB,iDA/MF,0EA8PE,WAA8B,IAAD,OAC3B,GAAIxB,KAAKhB,MAAMC,MAEb,MAAMe,KAAKhB,MAAMC,MAGnB,OAEE,aADA,CACCzC,EAAD,CACE4G,cAAY,uBACZC,IAAK,SAAArB,GACH,EAAKjD,QAAUiD,SAzQzB,GAAwCsB,iBAgRxC,SAASH,EACP9D,GAEA,IAAMkE,EAAYlE,EAAGqB,KAErB,OAAK6C,GAAwC,IAA3BA,EAAU7C,KAAKe,QAI1BY,EAAakB,GAHX,KAMX,SAASR,EACP1D,GAEA,IAAMS,EAAWe,EAAYxB,GAC7B,GAAgB,MAAZS,EACF,OAAO,KAKT,IAFA,IAAM0D,EAA8C,GAEpD,MAA8BzC,OAAOC,QAAQlB,GAA7C,eAAwD,CAAC,IAAD,sBAA5CmB,EAA4C,KAAtCC,EAAsC,KAEtDsC,EAAcvC,GAAQoB,EAAanB,GAGrC,OAAOsC,EAGT,SAAS3C,EACPxB,GACuC,IAAD,EACtC,GAA4B,KAAxB,UAAAA,EAAGS,gBAAH,eAAamD,QACf,OAAO,KAGT,IAAMnD,EAA0C,GAUhD,OARAT,EAAGS,SAAS2D,SAAQ,SAACC,GACnB,GAAKA,EAAL,CAGA,IAAMzC,EAAOyC,EAAEC,QAAUD,EAAEzC,KAAO,KAClCnB,EAASmB,GAAkByC,EAAEhD,SAGxBZ,EAGF,SAASuC,EACdkB,GAE6B,IAD7BK,EAC4B,uDADf,EAEb,GAAIL,EAAUM,UACZ,MAAO,GAWT,IARA,IAAMC,EAAU,GALY,EAMkBP,EAAU7B,WAAtCqC,EANU,EAMpBnC,SAA6BoC,EANT,EAMJlC,YAElBmC,EAAYC,IAAOC,YAAYZ,EAAUa,MAAMC,MAAM,IACrDC,EAAoBnG,EAAsBoG,IAC9CN,GAGOO,EAAWZ,EAAYY,EAAWT,EAAMS,IAAY,CAC3D,IAAMC,EAAgC,GAEtC,GAAIH,EAAmB,CACrB,IAAMI,EAAanB,EAAUoB,cAAcH,EAAU,GAErDC,EAAIxG,GACoB,kBAAfyG,EAA0BE,OAAOF,GAAcA,EAG1D,IAAK,IAAIG,EAAW,EAAGA,EAAWb,EAAMa,IAAY,CAClD,IAAMC,EAAYvB,EAAUrB,aAAasC,EAAUK,GACnDJ,EAAIlB,EAAU/I,QAAQ,GAAGqK,IACF,kBAAdC,EAAyBF,OAAOE,GAAaA,EAExDhB,EAAQiB,KAAKN,GAGf,OAAOX,EA+CMkB,kBAAUC,YAAsBtG","file":"static/js/29.8d760331.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { merge, mergeWith, isArray } from \"lodash\"\nimport { getLuminance } from \"color2k\"\n\nimport { Theme } from \"src/theme\"\n\nexport function applyStreamlitTheme(config: any, theme: Theme): any {\n  const hasLightBg = getLuminance(theme.colors.bgColor) > 0.5\n  // This theming config contains multiple hard coded spacing values.\n  // The reason is that we currently only have rem values in our spacing\n  // definitions and vega lite requires numerical (pixel) values.\n\n  const streamlitTheme = {\n    font: theme.genericFonts.bodyFont,\n    background: theme.colors.bgColor,\n    fieldTitle: \"verbal\",\n    autosize: { type: \"fit\", contains: \"padding\" },\n    title: {\n      align: \"left\",\n      anchor: \"start\",\n      color: theme.colors.headingColor,\n      titleFontStyle: \"normal\",\n      fontWeight: theme.fontWeights.bold,\n      fontSize: theme.fontSizes.smPx + 2,\n      orient: \"top\",\n      offset: 26,\n    },\n    axis: {\n      labelFontSize: theme.fontSizes.twoSmPx,\n      labelFontWeight: theme.fontWeights.normal,\n      labelColor: theme.colors.fadedText60,\n      labelFontStyle: \"normal\",\n      titleFontWeight: theme.fontWeights.normal,\n      titleFontSize: theme.fontSizes.smPx,\n      titleColor: theme.colors.fadedText60,\n      titleFontStyle: \"normal\",\n      ticks: false,\n      gridColor: theme.colors.fadedText05,\n      domain: false,\n      domainWidth: 1,\n      domainColor: theme.colors.fadedText05,\n      labelFlush: true,\n      labelFlushOffset: 1,\n      labelBound: false,\n      labelLimit: 100,\n      titlePadding: 16,\n      labelPadding: 16,\n      labelSeparation: 4,\n      labelOverlap: true,\n    },\n    legend: {\n      labelFontSize: theme.fontSizes.smPx,\n      labelFontWeight: theme.fontWeights.normal,\n      labelColor: theme.colors.bodyText,\n      titleFontSize: theme.fontSizes.smPx,\n      titleFontWeight: theme.fontWeights.normal,\n      titleFontStyle: \"normal\",\n      titleColor: theme.colors.fadedText60,\n      titlePadding: 12,\n      labelPadding: 16,\n      columnPadding: 8,\n      rowPadding: 4,\n      padding: -1,\n      orient: \"bottom\",\n    },\n    range: {\n      // TODO: Eventually, we might want to move those color schemes to our theme.\n      // But For now, this is specifically defined for vega lite based charts.\n      // Ramp & heatmap are both using the sequential color scheme.\n      ...(hasLightBg\n        ? {\n            category: [\n              \"#0068C9\",\n              \"#83C9FF\",\n              \"#FF2B2B\",\n              \"#FFABAB\",\n              \"#29B09D\",\n              \"#7DEFA1\",\n              \"#FF8700\",\n              \"#FFD16A\",\n              \"#6D3FC0\",\n              \"#D5DAE5\",\n            ],\n            diverging: [\n              \"#004280\",\n              \"#0054A3\",\n              \"#1C83E1\",\n              \"#60B4FF\",\n              \"#A6DCFF\",\n              \"#FFC7C7\",\n              \"#FF8C8C\",\n              \"#FF4B4B\",\n              \"#BD4043\",\n              \"#7D353B\",\n            ],\n            ramp: [\n              \"#E4F5FF\",\n              \"#C7EBFF\",\n              \"#A6DCFF\",\n              \"#83C9FF\",\n              \"#60B4FF\",\n              \"#3D9DF3\",\n              \"#1C83E1\",\n              \"#0068C9\",\n              \"#0054A3\",\n              \"#004280\",\n            ],\n            heatmap: [\n              \"#E4F5FF\",\n              \"#C7EBFF\",\n              \"#A6DCFF\",\n              \"#83C9FF\",\n              \"#60B4FF\",\n              \"#3D9DF3\",\n              \"#1C83E1\",\n              \"#0068C9\",\n              \"#0054A3\",\n              \"#004280\",\n            ],\n          }\n        : {\n            category: [\n              \"#83C9FF\",\n              \"#0068C9\",\n              \"#FFABAB\",\n              \"#FF2B2B\",\n              \"#7DEFA1\",\n              \"#29B09D\",\n              \"#FFD16A\",\n              \"#FF8700\",\n              \"#6D3FC0\",\n              \"#D5DAE5\",\n            ],\n            diverging: [\n              \"#A6DCFF\",\n              \"#60B4FF\",\n              \"#1C83E1\",\n              \"#0054A3\",\n              \"#004280\",\n              \"#7D353B\",\n              \"#BD4043\",\n              \"#FF4B4B\",\n              \"#FF8C8C\",\n              \"#FFC7C7\",\n            ],\n            ramp: [\n              \"#004280\",\n              \"#0054A3\",\n              \"#0068C9\",\n              \"#1C83E1\",\n              \"#3D9DF3\",\n              \"#60B4FF\",\n              \"#83C9FF\",\n              \"#A6DCFF\",\n              \"#C7EBFF\",\n              \"#E4F5FF\",\n            ],\n            heatmap: [\n              \"#004280\",\n              \"#0054A3\",\n              \"#0068C9\",\n              \"#1C83E1\",\n              \"#3D9DF3\",\n              \"#60B4FF\",\n              \"#83C9FF\",\n              \"#A6DCFF\",\n              \"#C7EBFF\",\n              \"#E4F5FF\",\n            ],\n          }),\n    },\n    view: {\n      columns: 1,\n      strokeWidth: 0,\n      stroke: \"transparent\",\n      continuousHeight: 350,\n      continuousWidth: 400,\n    },\n    concat: {\n      columns: 1,\n    },\n    facet: {\n      columns: 1,\n    },\n    mark: {\n      tooltip: true,\n      ...(hasLightBg ? { color: \"#0068C9\" } : { color: \"#83C9FF\" }),\n    },\n    bar: {\n      binSpacing: 4,\n      discreteBandSize: { band: 0.85 },\n    },\n    axisDiscrete: {\n      grid: false,\n    },\n    axisXPoint: {\n      grid: false,\n    },\n    axisTemporal: {\n      grid: false,\n    },\n    axisXBand: {\n      grid: false,\n    },\n  }\n\n  if (!config) {\n    return streamlitTheme\n  }\n\n  // Fill in theme defaults where the user didn't specify config options.\n  return mergeWith({}, streamlitTheme, config, (_, b) =>\n    isArray(b) ? b : undefined\n  )\n}\n\nexport function applyThemeDefaults(config: any, theme: Theme): any {\n  const { colors, fontSizes, genericFonts } = theme\n  const themeFonts = {\n    labelFont: genericFonts.bodyFont,\n    titleFont: genericFonts.bodyFont,\n    labelFontSize: fontSizes.twoSmPx,\n    titleFontSize: fontSizes.twoSmPx,\n  }\n  const themeDefaults = {\n    background: colors.bgColor,\n    axis: {\n      labelColor: colors.bodyText,\n      titleColor: colors.bodyText,\n      gridColor: colors.fadedText10,\n      ...themeFonts,\n    },\n    legend: {\n      labelColor: colors.bodyText,\n      titleColor: colors.bodyText,\n      ...themeFonts,\n    },\n    title: {\n      color: colors.bodyText,\n      subtitleColor: colors.bodyText,\n      ...themeFonts,\n    },\n    header: {\n      labelColor: colors.bodyText,\n    },\n    view: {\n      continuousHeight: 350,\n      continuousWidth: 400,\n    },\n  }\n\n  if (!config) {\n    return themeDefaults\n  }\n\n  // Fill in theme defaults where the user didn't specify config options.\n  return merge({}, themeDefaults, config || {})\n}\n","/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\n\nexport const StyledVegaLiteChartContainer = styled.div(({ theme }) => ({\n  // These styles come from VegaLite Library\n  \"&.vega-embed\": {\n    \"&:hover summary, .vega-embed:focus summary\": {\n      background: \"transparent\",\n    },\n    \"&.has-actions\": {\n      paddingRight: 0,\n    },\n    \".vega-actions\": {\n      zIndex: theme.zIndices.popupMenu,\n      // Customize menu UI to look like the Streamlit menu:\n      backgroundColor: theme.colors.bgColor,\n      boxShadow: \"rgb(0 0 0 / 16%) 0px 4px 16px\",\n      border: `1px solid ${theme.colors.fadedText10}`,\n      a: {\n        fontFamily: theme.genericFonts.bodyFont,\n        fontWeight: theme.fontWeights.normal,\n        fontSize: theme.fontSizes.md,\n        margin: 0,\n        padding: `${theme.spacing.twoXS} ${theme.spacing.twoXL}`,\n        color: theme.colors.bodyText,\n      },\n      \"a:hover\": {\n        backgroundColor: theme.colors.secondaryBg,\n        color: theme.colors.bodyText,\n      },\n      \":before\": {\n        content: \"none\",\n      },\n      \":after\": {\n        content: \"none\",\n      },\n    },\n    summary: {\n      opacity: 0,\n      // Fix weird floating button height issue in Vega Lite.\n      height: \"auto\",\n      // Fix floating button appearing above pop-ups.\n      zIndex: theme.zIndices.menuButton,\n      border: \"none\",\n      boxShadow: \"none\",\n      borderRadius: theme.radii.md,\n      color: theme.colors.fadedText10,\n      backgroundColor: \"transparent\",\n      transition: \"opacity 300ms 150ms,transform 300ms 150ms\",\n      \"&:active, &:focus-visible, &:hover\": {\n        border: \"none\",\n        boxShadow: \"none\",\n        color: theme.colors.bodyText,\n        opacity: \"1 !important\",\n        background: theme.colors.darkenedBgMix25,\n      },\n    },\n  },\n}))\n","/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { PureComponent } from \"react\"\nimport { withTheme } from \"@emotion/react\"\nimport embed from \"vega-embed\"\nimport * as vega from \"vega\"\n\nimport { logMessage } from \"src/lib/log\"\nimport withFullScreenWrapper from \"src/hocs/withFullScreenWrapper\"\nimport { ensureError } from \"src/lib/ErrorHandling\"\nimport { IndexTypeName, Quiver } from \"src/lib/Quiver\"\nimport { Theme } from \"src/theme\"\n\nimport { applyStreamlitTheme, applyThemeDefaults } from \"./CustomTheme\"\nimport { StyledVegaLiteChartContainer } from \"./styled-components\"\n\nconst MagicFields = {\n  DATAFRAME_INDEX: \"(index)\",\n}\n\nconst DEFAULT_DATA_NAME = \"source\"\n\n/**\n * Fix bug where Vega Lite was vertically-cropping the x-axis in some cases.\n * For example, in e2e/scripts/add_rows.py\n */\nconst BOTTOM_PADDING = 20\n\n/** Types of dataframe-indices that are supported as x axis. */\nconst SUPPORTED_INDEX_TYPES = new Set([\n  IndexTypeName.DatetimeIndex,\n  IndexTypeName.Float64Index,\n  IndexTypeName.Int64Index,\n  IndexTypeName.RangeIndex,\n  IndexTypeName.UInt64Index,\n])\n\ninterface Props {\n  element: VegaLiteChartElement\n  theme: Theme\n  width: number\n}\n\n/** All of the data that makes up a VegaLite chart. */\nexport interface VegaLiteChartElement {\n  /**\n   * The dataframe that will be used as the chart's main data source, if\n   * specified using Vega-Lite's inline API.\n   *\n   * This is mutually exclusive with WrappedNamedDataset - if `data` is non-null,\n   * `datasets` will not be populated; if `datasets` is populated, then `data`\n   * will be null.\n   */\n  data: Quiver | null\n\n  /** The a JSON-formatted string with the Vega-Lite spec. */\n  spec: string\n\n  /**\n   * Dataframes associated with this chart using Vega-Lite's datasets API,\n   * if any.\n   */\n  datasets: WrappedNamedDataset[]\n\n  /** If True, will overwrite the chart width spec to fit to container. */\n  useContainerWidth: boolean\n}\n\n/** A mapping of `ArrowNamedDataSet.proto`. */\nexport interface WrappedNamedDataset {\n  /** The dataset's optional name. */\n  name: string | null\n\n  /** True if the name field (above) was manually set. */\n  hasName: boolean\n\n  /** The data itself, wrapped in a Quiver object. */\n  data: Quiver\n}\n\nexport interface PropsWithHeight extends Props {\n  height: number | undefined\n}\n\ninterface State {\n  error?: Error\n}\n\nexport class ArrowVegaLiteChart extends PureComponent<PropsWithHeight, State> {\n  /**\n   * The Vega view object\n   */\n  private vegaView?: vega.View\n\n  /**\n   * Finalizer for the embedded vega object. Must be called to dispose\n   * of the vegaView when it's no longer used.\n   */\n  private vegaFinalizer?: () => void\n\n  /**\n   * The default data name to add to.\n   */\n  private defaultDataName = DEFAULT_DATA_NAME\n\n  /**\n   * The html element we attach the Vega view to.\n   */\n  private element: HTMLDivElement | null = null\n\n  readonly state = {\n    error: undefined,\n  }\n\n  public async componentDidMount(): Promise<void> {\n    try {\n      await this.createView()\n    } catch (e) {\n      const error = ensureError(e)\n      this.setState({ error })\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.finalizeView()\n  }\n\n  /**\n   * Finalize the view so it can be garbage collected. This should be done\n   * when a new view is created, and when the component unmounts.\n   */\n  private finalizeView = (): any => {\n    if (this.vegaFinalizer) {\n      this.vegaFinalizer()\n    }\n    this.vegaFinalizer = undefined\n    this.vegaView = undefined\n  }\n\n  public async componentDidUpdate(prevProps: PropsWithHeight): Promise<void> {\n    const { element: prevElement, theme: prevTheme } = prevProps\n    const { element, theme } = this.props\n\n    const prevSpec = prevElement.spec\n    const { spec } = element\n\n    if (\n      !this.vegaView ||\n      prevSpec !== spec ||\n      prevTheme !== theme ||\n      prevProps.width !== this.props.width ||\n      prevProps.height !== this.props.height\n    ) {\n      logMessage(\"Vega spec changed.\")\n      try {\n        await this.createView()\n      } catch (e) {\n        const error = ensureError(e)\n\n        this.setState({ error })\n      }\n      return\n    }\n\n    const prevData = prevElement.data\n    const { data } = element\n\n    if (prevData || data) {\n      this.updateData(this.defaultDataName, prevData, data)\n    }\n\n    const prevDataSets = getDataSets(prevElement) || {}\n    const dataSets = getDataSets(element) || {}\n\n    for (const [name, dataset] of Object.entries(dataSets)) {\n      const datasetName = name || this.defaultDataName\n      const prevDataset = prevDataSets[datasetName]\n\n      this.updateData(datasetName, prevDataset, dataset)\n    }\n\n    // Remove all datasets that are in the previous but not the current datasets.\n    for (const name of Object.keys(prevDataSets)) {\n      if (!dataSets.hasOwnProperty(name) && name !== this.defaultDataName) {\n        this.updateData(name, null, null)\n      }\n    }\n\n    this.vegaView.resize().runAsync()\n  }\n\n  public generateSpec = (): any => {\n    const { element: el, theme } = this.props\n    const spec = JSON.parse(el.spec)\n    const { useContainerWidth } = el\n    if (spec.usermeta?.embedOptions?.theme === \"streamlit\") {\n      spec.config = applyStreamlitTheme(spec.config, theme)\n      // Remove the theme from the usermeta so it doesn't get picked up by vega embed.\n      spec.usermeta.embedOptions.theme = undefined\n    } else {\n      // Apply minor theming improvements to work better with Streamlit\n      spec.config = applyThemeDefaults(spec.config, theme)\n    }\n\n    if (this.props.height) {\n      // fullscreen\n      spec.width = this.props.width\n      spec.height = this.props.height\n    } else if (useContainerWidth) {\n      spec.width = this.props.width\n    }\n\n    if (!spec.padding) {\n      spec.padding = {}\n    }\n\n    if (spec.padding.bottom == null) {\n      spec.padding.bottom = BOTTOM_PADDING\n    }\n\n    if (spec.datasets) {\n      throw new Error(\"Datasets should not be passed as part of the spec\")\n    }\n\n    return spec\n  }\n\n  /**\n   * Update the dataset in the Vega view. This method tried to minimize changes\n   * by automatically creating and applying diffs.\n   *\n   * @param name The name of the dataset.\n   * @param prevData The dataset before the update.\n   * @param data The dataset at the current state.\n   */\n  private updateData(\n    name: string,\n    prevData: Quiver | null,\n    data: Quiver | null\n  ): void {\n    if (!this.vegaView) {\n      throw new Error(\"Chart has not been drawn yet\")\n    }\n\n    if (!data || data.data.numRows === 0) {\n      const view = this.vegaView as any\n      // eslint-disable-next-line no-underscore-dangle\n      const viewHasDataWithName = view._runtime.data.hasOwnProperty(name)\n      if (viewHasDataWithName) {\n        this.vegaView.remove(name, vega.truthy)\n      }\n      return\n    }\n\n    if (!prevData || prevData.data.numRows === 0) {\n      this.vegaView.insert(name, getDataArray(data))\n      return\n    }\n\n    const {\n      dataRows: prevNumRows,\n      dataColumns: prevNumCols,\n    } = prevData.dimensions\n    const { dataRows: numRows, dataColumns: numCols } = data.dimensions\n\n    // Check if dataframes have same \"shape\" but the new one has more rows.\n    if (\n      dataIsAnAppendOfPrev(\n        prevData,\n        prevNumRows,\n        prevNumCols,\n        data,\n        numRows,\n        numCols\n      )\n    ) {\n      if (prevNumRows < numRows) {\n        this.vegaView.insert(name, getDataArray(data, prevNumRows))\n      }\n    } else {\n      // Clean the dataset and insert from scratch.\n      const cs = vega\n        .changeset()\n        .remove(vega.truthy)\n        .insert(getDataArray(data))\n      this.vegaView.change(name, cs)\n      logMessage(\n        `Had to clear the ${name} dataset before inserting data through Vega view.`\n      )\n    }\n  }\n\n  /**\n   * Create a new Vega view and add the data.\n   */\n  private async createView(): Promise<void> {\n    logMessage(\"Creating a new Vega view.\")\n\n    if (!this.element) {\n      throw Error(\"Element missing.\")\n    }\n\n    // Finalize the previous view so it can be garbage collected.\n    this.finalizeView()\n\n    const el = this.props.element\n    const spec = this.generateSpec()\n    const { vgSpec, view, finalize } = await embed(this.element, spec, {\n      defaultStyle: true,\n    })\n\n    this.vegaView = view\n    this.vegaFinalizer = finalize\n\n    const datasets = getDataArrays(el)\n\n    // Heuristic to determine the default dataset name.\n    const datasetNames = datasets ? Object.keys(datasets) : []\n    if (datasetNames.length === 1) {\n      const [datasetName] = datasetNames\n      this.defaultDataName = datasetName\n    } else if (datasetNames.length === 0 && vgSpec.data) {\n      this.defaultDataName = DEFAULT_DATA_NAME\n    }\n\n    const dataObj = getInlineData(el)\n    if (dataObj) {\n      view.insert(this.defaultDataName, dataObj)\n    }\n    if (datasets) {\n      for (const [name, data] of Object.entries(datasets)) {\n        view.insert(name, data)\n      }\n    }\n\n    await view.runAsync()\n\n    // Fix bug where the \"...\" menu button overlaps with charts where width is\n    // set to -1 on first load.\n    this.vegaView.resize().runAsync()\n  }\n\n  public render(): JSX.Element {\n    if (this.state.error) {\n      // eslint-disable-next-line @typescript-eslint/no-throw-literal\n      throw this.state.error\n    }\n\n    return (\n      // Create the container Vega draws inside.\n      <StyledVegaLiteChartContainer\n        data-testid=\"stArrowVegaLiteChart\"\n        ref={c => {\n          this.element = c\n        }}\n      />\n    )\n  }\n}\n\nfunction getInlineData(\n  el: VegaLiteChartElement\n): { [field: string]: any }[] | null {\n  const dataProto = el.data\n\n  if (!dataProto || dataProto.data.numRows === 0) {\n    return null\n  }\n\n  return getDataArray(dataProto)\n}\n\nfunction getDataArrays(\n  el: VegaLiteChartElement\n): { [dataset: string]: any[] } | null {\n  const datasets = getDataSets(el)\n  if (datasets == null) {\n    return null\n  }\n\n  const datasetArrays: { [dataset: string]: any[] } = {}\n\n  for (const [name, dataset] of Object.entries(datasets)) {\n    // @ts-ignore\n    datasetArrays[name] = getDataArray(dataset)\n  }\n\n  return datasetArrays\n}\n\nfunction getDataSets(\n  el: VegaLiteChartElement\n): { [dataset: string]: Quiver } | null {\n  if (el.datasets?.length === 0) {\n    return null\n  }\n\n  const datasets: { [dataset: string]: Quiver } = {}\n\n  el.datasets.forEach((x: WrappedNamedDataset) => {\n    if (!x) {\n      return\n    }\n    const name = x.hasName ? x.name : null\n    datasets[name as string] = x.data\n  })\n\n  return datasets\n}\n\nexport function getDataArray(\n  dataProto: Quiver,\n  startIndex = 0\n): { [field: string]: any }[] {\n  if (dataProto.isEmpty()) {\n    return []\n  }\n\n  const dataArr = []\n  const { dataRows: rows, dataColumns: cols } = dataProto.dimensions\n\n  const indexType = Quiver.getTypeName(dataProto.types.index[0])\n  const hasSupportedIndex = SUPPORTED_INDEX_TYPES.has(\n    indexType as IndexTypeName\n  )\n\n  for (let rowIndex = startIndex; rowIndex < rows; rowIndex++) {\n    const row: { [field: string]: any } = {}\n\n    if (hasSupportedIndex) {\n      const indexValue = dataProto.getIndexValue(rowIndex, 0)\n      // VegaLite can't handle BigInts, so they have to be converted to Numbers first\n      row[MagicFields.DATAFRAME_INDEX] =\n        typeof indexValue === \"bigint\" ? Number(indexValue) : indexValue\n    }\n\n    for (let colIndex = 0; colIndex < cols; colIndex++) {\n      const dataValue = dataProto.getDataValue(rowIndex, colIndex)\n      row[dataProto.columns[0][colIndex]] =\n        typeof dataValue === \"bigint\" ? Number(dataValue) : dataValue\n    }\n    dataArr.push(row)\n  }\n\n  return dataArr\n}\n\n/**\n * Checks if data looks like it's just prevData plus some appended rows.\n */\nfunction dataIsAnAppendOfPrev(\n  prevData: Quiver,\n  prevNumRows: number,\n  prevNumCols: number,\n  data: Quiver,\n  numRows: number,\n  numCols: number\n): boolean {\n  // Check whether dataframes have the same shape.\n\n  // not an append\n  if (prevNumCols !== numCols) {\n    return false\n  }\n\n  // Data can be updated, but still have the same number of rows.\n  // We consider the case an append only when the number of rows has increased\n  if (prevNumRows >= numRows) {\n    return false\n  }\n\n  // if no previous data, render from scratch\n  if (prevNumRows === 0) {\n    return false\n  }\n\n  const c = numCols - 1\n  const r = prevNumRows - 1\n\n  // Check if the new dataframe looks like it's a superset of the old one.\n  // (this is a very light check, and not guaranteed to be right!)\n  if (\n    prevData.getDataValue(0, c) !== data.getDataValue(0, c) ||\n    prevData.getDataValue(r, c) !== data.getDataValue(r, c)\n  ) {\n    return false\n  }\n\n  return true\n}\n\nexport default withTheme(withFullScreenWrapper(ArrowVegaLiteChart))\n"],"sourceRoot":""}