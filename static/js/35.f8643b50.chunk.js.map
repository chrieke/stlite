{"version":3,"sources":["../../../streamlit/frontend/src/components/elements/Spinner/styled-components.ts","../../../streamlit/frontend/src/components/elements/Spinner/Spinner.tsx"],"names":["ThemedStyledSpinner","StyledSpinnerNext","shouldForwardProp","isPropValid","theme","$usingCustomTheme","marginTop","spacing","none","marginBottom","marginRight","marginLeft","borderColor","colors","fadedText10","borderTopColor","primary","blue70","flexGrow","flexShrink","StyledSpinnerContainer","display","gap","lg","alignItems","width","Spinner","element","useTheme","activeTheme","React","useContext","AppContext","usingCustomTheme","isPresetTheme","styleProp","className","style","$size","iconSizes","twoXL","StreamlitMarkdown","source","text","allowHTML"],"mappings":";0OAqBaA,EAAsB,YAAOC,IAAP,CACjCC,kBAAmBC,IADc,sBAEhC,YAAmC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,kBACX,MAAO,CACLC,UAAWF,EAAMG,QAAQC,KACzBC,aAAcL,EAAMG,QAAQC,KAC5BE,YAAaN,EAAMG,QAAQC,KAC3BG,WAAYP,EAAMG,QAAQC,KAC1BI,YAAaR,EAAMS,OAAOC,YAC1BC,eAAgBV,EACZD,EAAMS,OAAOG,QACbZ,EAAMS,OAAOI,OACjBC,SAAU,EACVC,WAAY,KAbmB,IAiBtBC,EAAyB,yCAAW,kBAAgB,CAC/DC,QAAS,OACTC,IAF+C,EAAGlB,MAEvCG,QAAQgB,GACnBC,WAAY,SACZC,MAAO,UAJ6B,I,OCcvBC,MAnBf,YAAkE,IAA/CD,EAA8C,EAA9CA,MAAOE,EAAuC,EAAvCA,QAClBvB,EAAewB,cACbC,EAAgBC,IAAMC,WAAWC,KAAjCH,YACFI,GAAoBC,wBAAcL,GAClCM,EAAY,CAAEV,SAEpB,OACE,qBAAKW,UAAU,YAAYC,MAAOF,EAAlC,SACE,eAACf,EAAD,WACE,cAACpB,EAAD,CACEsC,MAAOlC,EAAMmC,UAAUC,MACvBnC,kBAAmB4B,IAErB,cAACQ,EAAA,EAAD,CAAmBC,OAAQf,EAAQgB,KAAMC,WAAW","file":"static/js/35.f8643b50.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from \"@emotion/styled\"\nimport { StyledSpinnerNext } from \"baseui/spinner\"\nimport isPropValid from \"@emotion/is-prop-valid\"\n\nexport const ThemedStyledSpinner = styled(StyledSpinnerNext, {\n  shouldForwardProp: isPropValid,\n})(({ theme, $usingCustomTheme }) => {\n  return {\n    marginTop: theme.spacing.none,\n    marginBottom: theme.spacing.none,\n    marginRight: theme.spacing.none,\n    marginLeft: theme.spacing.none,\n    borderColor: theme.colors.fadedText10,\n    borderTopColor: $usingCustomTheme\n      ? theme.colors.primary\n      : theme.colors.blue70,\n    flexGrow: 0,\n    flexShrink: 0,\n  }\n})\n\nexport const StyledSpinnerContainer = styled.div(({ theme }) => ({\n  display: \"flex\",\n  gap: theme.spacing.lg,\n  alignItems: \"center\",\n  width: \"100%\",\n}))\n","/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement } from \"react\"\nimport { useTheme } from \"@emotion/react\"\nimport { Theme, isPresetTheme } from \"src/theme\"\nimport { Spinner as SpinnerProto } from \"src/autogen/proto\"\nimport StreamlitMarkdown from \"src/components/shared/StreamlitMarkdown\"\nimport AppContext from \"src/components/core/AppContext\"\nimport {\n  StyledSpinnerContainer,\n  ThemedStyledSpinner,\n} from \"./styled-components\"\n\nexport interface SpinnerProps {\n  width: number\n  element: SpinnerProto\n}\n\nfunction Spinner({ width, element }: SpinnerProps): ReactElement {\n  const theme: Theme = useTheme()\n  const { activeTheme } = React.useContext(AppContext)\n  const usingCustomTheme = !isPresetTheme(activeTheme)\n  const styleProp = { width }\n\n  return (\n    <div className=\"stSpinner\" style={styleProp}>\n      <StyledSpinnerContainer>\n        <ThemedStyledSpinner\n          $size={theme.iconSizes.twoXL}\n          $usingCustomTheme={usingCustomTheme}\n        />\n        <StreamlitMarkdown source={element.text} allowHTML={false} />\n      </StyledSpinnerContainer>\n    </div>\n  )\n}\n\nexport default Spinner\n"],"sourceRoot":""}