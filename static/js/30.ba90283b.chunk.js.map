{"version":3,"sources":["../../../streamlit/frontend/src/components/elements/Audio/Audio.tsx"],"names":["Audio","element","width","audioRef","useRef","getBaseUriParts","useContext","AppContext","useEffect","current","currentTime","startTime","rawUrl","useStliteMediaObjectUrl","url","uri","buildMediaUri","id","ref","controls","src","className","style"],"mappings":";uMA4Be,SAASA,EAAT,GAA8D,IAA7CC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,MACjCC,EAAWC,iBAAyB,MAClCC,EAAoBC,qBAAWC,KAA/BF,gBAERG,qBAAU,WACJL,EAASM,UACXN,EAASM,QAAQC,YAAcT,EAAQU,aAExC,CAACV,EAAQU,YAEZ,IAAMC,EAASC,YAAwBZ,EAAQa,KACzCC,EAAMC,YAAcJ,EAAQP,KAClC,OACE,uBACEY,GAAG,QACHC,IAAKf,EACLgB,UAAQ,EACRC,IAAKL,EACLM,UAAU,UACVC,MAAO,CAAEpB","file":"static/js/30.ba90283b.chunk.js","sourcesContent":["/**\n * @license\n * Copyright 2018-2022 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { ReactElement, useContext, useEffect, useRef } from \"react\"\nimport { Audio as AudioProto } from \"src/autogen/proto\"\nimport AppContext from \"src/components/core/AppContext\"\nimport { buildMediaUri } from \"src/lib/UriUtil\"\nimport { useStliteMediaObjectUrl } from \"@stlite/kernel\"\n\nexport interface AudioProps {\n  width: number\n  element: AudioProto\n}\n\nexport default function Audio({ element, width }: AudioProps): ReactElement {\n  const audioRef = useRef<HTMLAudioElement>(null)\n  const { getBaseUriParts } = useContext(AppContext)\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = element.startTime\n    }\n  }, [element.startTime])\n\n  const rawUrl = useStliteMediaObjectUrl(element.url)\n  const uri = buildMediaUri(rawUrl, getBaseUriParts())\n  return (\n    <audio\n      id=\"audio\"\n      ref={audioRef}\n      controls\n      src={uri}\n      className=\"stAudio\"\n      style={{ width }}\n    />\n  )\n}\n"],"sourceRoot":""}